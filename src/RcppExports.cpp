// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// roll_mean
SEXP roll_mean(SEXP x, SEXP weights, SEXP pad);
RcppExport SEXP RcppRoll_roll_mean(SEXP xSEXP, SEXP weightsSEXP, SEXP padSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< SEXP >::type x(xSEXP );
        Rcpp::traits::input_parameter< SEXP >::type weights(weightsSEXP );
        Rcpp::traits::input_parameter< SEXP >::type pad(padSEXP );
        SEXP __result = roll_mean(x, weights, pad);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// roll_median
SEXP roll_median(SEXP x, SEXP weights, SEXP pad);
RcppExport SEXP RcppRoll_roll_median(SEXP xSEXP, SEXP weightsSEXP, SEXP padSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< SEXP >::type x(xSEXP );
        Rcpp::traits::input_parameter< SEXP >::type weights(weightsSEXP );
        Rcpp::traits::input_parameter< SEXP >::type pad(padSEXP );
        SEXP __result = roll_median(x, weights, pad);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// roll_max
SEXP roll_max(NumericVector x, NumericVector weights, SEXP pad);
RcppExport SEXP RcppRoll_roll_max(SEXP xSEXP, SEXP weightsSEXP, SEXP padSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type weights(weightsSEXP );
        Rcpp::traits::input_parameter< SEXP >::type pad(padSEXP );
        SEXP __result = roll_max(x, weights, pad);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// roll_min
SEXP roll_min(NumericVector x, NumericVector weights, SEXP pad);
RcppExport SEXP RcppRoll_roll_min(SEXP xSEXP, SEXP weightsSEXP, SEXP padSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type weights(weightsSEXP );
        Rcpp::traits::input_parameter< SEXP >::type pad(padSEXP );
        SEXP __result = roll_min(x, weights, pad);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// roll_prod
SEXP roll_prod(NumericVector x, NumericVector weights, SEXP pad);
RcppExport SEXP RcppRoll_roll_prod(SEXP xSEXP, SEXP weightsSEXP, SEXP padSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type weights(weightsSEXP );
        Rcpp::traits::input_parameter< SEXP >::type pad(padSEXP );
        SEXP __result = roll_prod(x, weights, pad);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// roll_sd
SEXP roll_sd(NumericVector x, NumericVector weights, SEXP pad);
RcppExport SEXP RcppRoll_roll_sd(SEXP xSEXP, SEXP weightsSEXP, SEXP padSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type weights(weightsSEXP );
        Rcpp::traits::input_parameter< SEXP >::type pad(padSEXP );
        SEXP __result = roll_sd(x, weights, pad);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// roll_var
SEXP roll_var(NumericVector x, NumericVector weights, SEXP pad);
RcppExport SEXP RcppRoll_roll_var(SEXP xSEXP, SEXP weightsSEXP, SEXP padSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type weights(weightsSEXP );
        Rcpp::traits::input_parameter< SEXP >::type pad(padSEXP );
        SEXP __result = roll_var(x, weights, pad);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
